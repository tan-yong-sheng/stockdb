"""empty message

Revision ID: f2c582378374
Revises: b890ee477745
Create Date: 2023-08-16 20:26:13.923619

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import logging
from app.decorators import log_start_end
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "f2c582378374"
down_revision = "b890ee477745"
branch_labels = None
depends_on = None

logger = logging.getLogger(__name__)


@log_start_end(log=logger)
def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "dim_companies", "created_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "dim_companies", "updated_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "dim_countries", "created_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "dim_countries", "updated_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "dim_data_vendor", "created_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "dim_data_vendor", "updated_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "dim_macro_parameters",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "dim_macro_parameters",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_daily_price", "created_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "fact_daily_price", "updated_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "fact_daily_price", "open", existing_type=mysql.FLOAT(), nullable=False
    )
    op.alter_column(
        "fact_daily_price", "high", existing_type=mysql.FLOAT(), nullable=False
    )
    op.alter_column(
        "fact_daily_price", "low", existing_type=mysql.FLOAT(), nullable=False
    )
    op.alter_column(
        "fact_daily_price", "close", existing_type=mysql.FLOAT(), nullable=False
    )
    op.alter_column(
        "fact_economic_calendar",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_economic_calendar",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_income_statement",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_income_statement",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_macro_indicators",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_macro_indicators",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_news", "created_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "fact_news", "updated_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "fact_one_min_price",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_one_min_price",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
    )
    op.alter_column(
        "fact_one_min_price", "open", existing_type=mysql.FLOAT(), nullable=False
    )
    op.alter_column(
        "fact_one_min_price", "high", existing_type=mysql.FLOAT(), nullable=False
    )
    op.alter_column(
        "fact_one_min_price", "low", existing_type=mysql.FLOAT(), nullable=False
    )
    op.alter_column(
        "fact_one_min_price", "close", existing_type=mysql.FLOAT(), nullable=False
    )
    op.alter_column(
        "test", "created_at", existing_type=mysql.DATETIME(), nullable=False
    )
    op.alter_column(
        "test", "updated_at", existing_type=mysql.DATETIME(), nullable=False
    )
    # ### end Alembic commands ###


@log_start_end(log=logger)
def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("test", "updated_at", existing_type=mysql.DATETIME(), nullable=True)
    op.alter_column("test", "created_at", existing_type=mysql.DATETIME(), nullable=True)
    op.alter_column(
        "fact_one_min_price", "close", existing_type=mysql.FLOAT(), nullable=True
    )
    op.alter_column(
        "fact_one_min_price", "low", existing_type=mysql.FLOAT(), nullable=True
    )
    op.alter_column(
        "fact_one_min_price", "high", existing_type=mysql.FLOAT(), nullable=True
    )
    op.alter_column(
        "fact_one_min_price", "open", existing_type=mysql.FLOAT(), nullable=True
    )
    op.alter_column(
        "fact_one_min_price",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "fact_one_min_price",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "fact_news", "updated_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "fact_news", "created_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "fact_macro_indicators",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "fact_macro_indicators",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "fact_income_statement",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "fact_income_statement",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "fact_economic_calendar",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "fact_economic_calendar",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "fact_daily_price", "close", existing_type=mysql.FLOAT(), nullable=True
    )
    op.alter_column(
        "fact_daily_price", "low", existing_type=mysql.FLOAT(), nullable=True
    )
    op.alter_column(
        "fact_daily_price", "high", existing_type=mysql.FLOAT(), nullable=True
    )
    op.alter_column(
        "fact_daily_price", "open", existing_type=mysql.FLOAT(), nullable=True
    )
    op.alter_column(
        "fact_daily_price", "updated_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "fact_daily_price", "created_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "dim_macro_parameters",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "dim_macro_parameters",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "dim_data_vendor", "updated_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "dim_data_vendor", "created_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "dim_countries", "updated_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "dim_countries", "created_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "dim_companies", "updated_at", existing_type=mysql.DATETIME(), nullable=True
    )
    op.alter_column(
        "dim_companies", "created_at", existing_type=mysql.DATETIME(), nullable=True
    )
    # ### end Alembic commands ###
