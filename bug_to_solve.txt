Keyword = "field list"

2023-07-31 23:24:03,158|INFO|__main__|wrapper|17|Function 'insert_db' started.
2023-07-31 23:24:03,797|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:24:03,801|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_companies (summary, website, market_cap, created_at, updated_at, symbol, name, currency, sector, industry_group, industry, exchange, market, country, state, city, zipcode, isin, cusip, figi, composite_figi, shareclass_figi) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
2023-07-31 23:24:03,802|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[generated in 0.00116s] ("Agilent Technologies, Inc. provides application focused solutions to the life sciences, diagnostics, and applied chemical markets worldwide. The Life ... (1702 characters truncated) ... ctronic commerce. It has collaboration agreement with SGS AXYS. The company was incorporated in 1999 and is headquartered in Santa Clara, California.", 'http://www.agilent.com', None, datetime.datetime(2023, 7, 31, 15, 23, 47, 189844), datetime.datetime(2023, 7, 31, 15, 24, 3, 310029), 'A', 'Agilent Technologies, Inc.', 'USD', 'Health Care', 'Pharmaceuticals, Biotechnology & Life Sciences', 'Biotechnology', 'NYQ', 'New York Stock Exchange', 'United States', 'CA', 'Santa Clara', 95051, 'US00846U1016', '00846U101', 'BBG000C2V541', 'BBG000C2V3D6', 'BBG001SCTQY4')
2023-07-31 23:24:03,843|INFO|sqlalchemy.engine.Engine|_rollback_impl|1055|ROLLBACK
2023-07-31 23:24:03,846|ERROR|__main__|insert_db|0|Exception: (MySQLdb.OperationalError) (1054, "Unknown column 'country' in 'field list'")
[SQL: INSERT INTO dim_companies (summary, website, market_cap, created_at, updated_at, symbol, name, currency, sector, industry_group, industry, exchange, market, country, state, city, zipcode, isin, cusip, figi, composite_figi, shareclass_figi) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ("Agilent Technologies, Inc. provides application focused solutions to the life sciences, diagnostics, and applied chemical markets worldwide. The Life ... (1702 characters truncated) ... ctronic commerce. It has collaboration agreement with SGS AXYS. The company was incorporated in 1999 and is headquartered in Santa Clara, California.", 'http://www.agilent.com', None, datetime.datetime(2023, 7, 31, 15, 23, 47, 189844), datetime.datetime(2023, 7, 31, 15, 24, 3, 310029), 'A', 'Agilent Technologies, Inc.', 'USD', 'Health Care', 'Pharmaceuticals, Biotechnology & Life Sciences', 'Biotechnology', 'NYQ', 'New York Stock Exchange', 'United States', 'CA', 'Santa Clara', 95051, 'US00846U1016', '00846U101', 'BBG000C2V541', 'BBG000C2V3D6', 'BBG001SCTQY4')]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
'Traceback (most recent call last):\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\default.py", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\cursors.py", line 179, in execute\n    res = self._query(mogrified_query)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\cursors.py", line 330, in _query\n    db.query(q)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\connections.py", line 255, in query\n    _mysql.connection.query(self, query)\nMySQLdb.OperationalError: (1054, "Unknown column \'country\' in \'field list\'")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File "C:\\Users\\yongsheng.tan\\Desktop\\stock_database\\app\\decorators.py", line 19, in wrapper\n    result = func(*args, **kwargs)\n  File "C:\\Users\\yongsheng.tan\\Desktop\\stock_database\\app\\db\\database_controller.py", line 66, in insert_db\n    session.commit()\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 1451, in commit\n    self._transaction.commit(_to_root=self.future)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 829, in commit\n    self._prepare_impl()\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 808, in _prepare_impl\n    self.session.flush()\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 3386, in flush\n    self._flush(objects)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 3526, in _flush\n    transaction.rollback(_capture_exception=True)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py", line 70, in __exit__\n    compat.raise_(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\util\\compat.py", line 208, in raise_\n    raise exception\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 3486, in _flush\n    flush_context.execute()\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py", line 456, in execute\n    rec.execute(self)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py", line 630, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\persistence.py", line 245, in save_obj\n    _emit_insert_statements(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\persistence.py", line 1238, in _emit_insert_statements\n    result = connection._execute_20(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1705, in _execute_20\n    return meth(self, args_10style, kwargs_10style, execution_options)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\sql\\elements.py", line 333, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1572, in _execute_clauseelement\n    ret = self._execute_context(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1943, in _execute_context\n    self._handle_dbapi_exception(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 2124, in _handle_dbapi_exception\n    util.raise_(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\util\\compat.py", line 208, in raise_\n    raise exception\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\default.py", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\cursors.py", line 179, in execute\n    res = self._query(mogrified_query)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\cursors.py", line 330, in _query\n    db.query(q)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\connections.py", line 255, in query\n    _mysql.connection.query(self, query)\nsqlalchemy.exc.OperationalError: (MySQLdb.OperationalError) (1054, "Unknown column \'country\' in \'field list\'")\n[SQL: INSERT INTO dim_companies (summary, website, market_cap, created_at, updated_at, symbol, name, currency, sector, industry_group, industry, exchange, market, country, state, city, zipcode, isin, cusip, figi, composite_figi, shareclass_figi) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]\n[parameters: ("Agilent Technologies, Inc. provides application focused solutions to the life sciences, diagnostics, and applied chemical markets worldwide. The Life ... (1702 characters truncated) ... ctronic commerce. It has collaboration agreement with SGS AXYS. The company was incorporated in 1999 and is headquartered in Santa Clara, California.", \'http://www.agilent.com\', None, datetime.datetime(2023, 7, 31, 15, 23, 47, 189844), datetime.datetime(2023, 7, 31, 15, 24, 3, 310029), \'A\', \'Agilent Technologies, Inc.\', \'USD\', \'Health Care\', \'Pharmaceuticals, Biotechnology & Life Sciences\', \'Biotechnology\', \'NYQ\', \'New York Stock Exchange\', \'United States\', \'CA\', \'Santa Clara\', 95051, \'US00846U1016\', \'00846U101\', \'BBG000C2V541\', \'BBG000C2V3D6\', \'BBG001SCTQY4\')]\n(Background on this error at: https://sqlalche.me/e/14/e3q8)'
2023-07-31 23:29:19,797|INFO|app.loggers|setup_handlers|74|Logging configuration finished
2023-07-31 23:29:19,797|INFO|app.loggers|setup_handlers|75|Logging set to ['file', 'stream']
2023-07-31 23:29:19,798|INFO|app.loggers|setup_handlers|76|Verbosity set to 50
2023-07-31 23:29:19,798|INFO|__main__|wrapper|17|Function 'create_db_and_tables' started.
2023-07-31 23:29:19,830|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT DATABASE()
2023-07-31 23:29:19,830|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[raw sql] ()
2023-07-31 23:29:19,832|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT @@sql_mode
2023-07-31 23:29:19,833|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[raw sql] ()
2023-07-31 23:29:19,834|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT @@lower_case_table_names
2023-07-31 23:29:19,835|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[raw sql] ()
2023-07-31 23:29:19,838|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:29:19,841|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,841|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[generated in 0.00056s] ('stockdb', 'dim_datavendor')
2023-07-31 23:29:19,853|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,854|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.01321s ago] ('stockdb', 'countrycompanylink')
2023-07-31 23:29:19,857|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,858|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.01731s ago] ('stockdb', 'dim_countries')
2023-07-31 23:29:19,860|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,861|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.02053s ago] ('stockdb', 'dim_companies')
2023-07-31 23:29:19,864|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,865|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.02402s ago] ('stockdb', 'fact_historical_price')
2023-07-31 23:29:19,866|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,867|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.02656s ago] ('stockdb', 'fact_news')
2023-07-31 23:29:19,871|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,872|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.03136s ago] ('stockdb', 'dim_macro_parameters')
2023-07-31 23:29:19,875|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,876|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.03533s ago] ('stockdb', 'fact_economic_calendar')
2023-07-31 23:29:19,878|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,879|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.03857s ago] ('stockdb', 'fact_macro_indicators')
2023-07-31 23:29:19,881|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,882|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.0416s ago] ('stockdb', 'test')
2023-07-31 23:29:19,884|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:29:19,885|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.04421s ago] ('stockdb', 'fundamentals')
2023-07-31 23:29:19,889|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:29:19,892|INFO|__main__|wrapper|20|Function 'create_db_and_tables' finished.
2023-07-31 23:29:19,893|INFO|app.db.stocks.stock_model|wrapper|17|Function 'get_company_info' started.
2023-07-31 23:29:37,858|INFO|app.db.stocks.stock_model|wrapper|20|Function 'get_company_info' finished.
2023-07-31 23:29:37,858|INFO|__main__|wrapper|17|Function 'insert_db' started.
2023-07-31 23:29:38,887|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:29:38,896|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_companies (summary, website, market_cap, created_at, updated_at, symbol, name, currency, sector, industry_group, industry, exchange, market, country, state, city, zipcode, isin, cusip, figi, composite_figi, shareclass_figi) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
2023-07-31 23:29:38,898|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[generated in 0.00279s] ("Agilent Technologies, Inc. provides application focused solutions to the life sciences, diagnostics, and applied chemical markets worldwide. The Life ... (1702 characters truncated) ... ctronic commerce. It has collaboration agreement with SGS AXYS. The company was incorporated in 1999 and is headquartered in Santa Clara, California.", 'http://www.agilent.com', None, datetime.datetime(2023, 7, 31, 15, 29, 19, 361567), datetime.datetime(2023, 7, 31, 15, 29, 37, 988194), 'A', 'Agilent Technologies, Inc.', 'USD', 'Health Care', 'Pharmaceuticals, Biotechnology & Life Sciences', 'Biotechnology', 'NYQ', 'New York Stock Exchange', 'United States', 'CA', 'Santa Clara', 95051, 'US00846U1016', '00846U101', 'BBG000C2V541', 'BBG000C2V3D6', 'BBG001SCTQY4')
2023-07-31 23:29:38,904|INFO|sqlalchemy.engine.Engine|_rollback_impl|1055|ROLLBACK
2023-07-31 23:29:38,907|ERROR|__main__|insert_db|0|Exception: (MySQLdb.OperationalError) (1054, "Unknown column 'country' in 'field list'")
[SQL: INSERT INTO dim_companies (summary, website, market_cap, created_at, updated_at, symbol, name, currency, sector, industry_group, industry, exchange, market, country, state, city, zipcode, isin, cusip, figi, composite_figi, shareclass_figi) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ("Agilent Technologies, Inc. provides application focused solutions to the life sciences, diagnostics, and applied chemical markets worldwide. The Life ... (1702 characters truncated) ... ctronic commerce. It has collaboration agreement with SGS AXYS. The company was incorporated in 1999 and is headquartered in Santa Clara, California.", 'http://www.agilent.com', None, datetime.datetime(2023, 7, 31, 15, 29, 19, 361567), datetime.datetime(2023, 7, 31, 15, 29, 37, 988194), 'A', 'Agilent Technologies, Inc.', 'USD', 'Health Care', 'Pharmaceuticals, Biotechnology & Life Sciences', 'Biotechnology', 'NYQ', 'New York Stock Exchange', 'United States', 'CA', 'Santa Clara', 95051, 'US00846U1016', '00846U101', 'BBG000C2V541', 'BBG000C2V3D6', 'BBG001SCTQY4')]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
'Traceback (most recent call last):\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\default.py", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\cursors.py", line 179, in execute\n    res = self._query(mogrified_query)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\cursors.py", line 330, in _query\n    db.query(q)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\connections.py", line 255, in query\n    _mysql.connection.query(self, query)\nMySQLdb.OperationalError: (1054, "Unknown column \'country\' in \'field list\'")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File "C:\\Users\\yongsheng.tan\\Desktop\\stock_database\\app\\decorators.py", line 19, in wrapper\n    result = func(*args, **kwargs)\n  File "C:\\Users\\yongsheng.tan\\Desktop\\stock_database\\app\\db\\database_controller.py", line 65, in insert_db\n    session.commit()\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 1451, in commit\n    self._transaction.commit(_to_root=self.future)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 829, in commit\n    self._prepare_impl()\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 808, in _prepare_impl\n    self.session.flush()\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 3386, in flush\n    self._flush(objects)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 3526, in _flush\n    transaction.rollback(_capture_exception=True)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py", line 70, in __exit__\n    compat.raise_(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\util\\compat.py", line 208, in raise_\n    raise exception\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\session.py", line 3486, in _flush\n    flush_context.execute()\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py", line 456, in execute\n    rec.execute(self)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py", line 630, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\persistence.py", line 245, in save_obj\n    _emit_insert_statements(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\orm\\persistence.py", line 1238, in _emit_insert_statements\n    result = connection._execute_20(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1705, in _execute_20\n    return meth(self, args_10style, kwargs_10style, execution_options)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\sql\\elements.py", line 333, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1572, in _execute_clauseelement\n    ret = self._execute_context(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1943, in _execute_context\n    self._handle_dbapi_exception(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 2124, in _handle_dbapi_exception\n    util.raise_(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\util\\compat.py", line 208, in raise_\n    raise exception\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\base.py", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\sqlalchemy\\engine\\default.py", line 736, in do_execute\n    cursor.execute(statement, parameters)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\cursors.py", line 179, in execute\n    res = self._query(mogrified_query)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\cursors.py", line 330, in _query\n    db.query(q)\n  File "C:\\Users\\yongsheng.tan\\AppData\\Local\\miniconda3\\envs\\quant_lab\\lib\\site-packages\\MySQLdb\\connections.py", line 255, in query\n    _mysql.connection.query(self, query)\nsqlalchemy.exc.OperationalError: (MySQLdb.OperationalError) (1054, "Unknown column \'country\' in \'field list\'")\n[SQL: INSERT INTO dim_companies (summary, website, market_cap, created_at, updated_at, symbol, name, currency, sector, industry_group, industry, exchange, market, country, state, city, zipcode, isin, cusip, figi, composite_figi, shareclass_figi) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]\n[parameters: ("Agilent Technologies, Inc. provides application focused solutions to the life sciences, diagnostics, and applied chemical markets worldwide. The Life ... (1702 characters truncated) ... ctronic commerce. It has collaboration agreement with SGS AXYS. The company was incorporated in 1999 and is headquartered in Santa Clara, California.", \'http://www.agilent.com\', None, datetime.datetime(2023, 7, 31, 15, 29, 19, 361567), datetime.datetime(2023, 7, 31, 15, 29, 37, 988194), \'A\', \'Agilent Technologies, Inc.\', \'USD\', \'Health Care\', \'Pharmaceuticals, Biotechnology & Life Sciences\', \'Biotechnology\', \'NYQ\', \'New York Stock Exchange\', \'United States\', \'CA\', \'Santa Clara\', 95051, \'US00846U1016\', \'00846U101\', \'BBG000C2V541\', \'BBG000C2V3D6\', \'BBG001SCTQY4\')]\n(Background on this error at: https://sqlalche.me/e/14/e3q8)'
2023-07-31 23:31:20,002|INFO|app.loggers|setup_handlers|74|Logging configuration finished
2023-07-31 23:31:20,002|INFO|app.loggers|setup_handlers|75|Logging set to ['file', 'stream']
2023-07-31 23:31:20,002|INFO|app.loggers|setup_handlers|76|Verbosity set to 50
2023-07-31 23:31:20,002|INFO|__main__|wrapper|17|Function 'create_db_and_tables' started.
2023-07-31 23:31:20,016|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT DATABASE()
2023-07-31 23:31:20,017|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[raw sql] ()
2023-07-31 23:31:20,017|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT @@sql_mode
2023-07-31 23:31:20,017|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[raw sql] ()
2023-07-31 23:31:20,018|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT @@lower_case_table_names
2023-07-31 23:31:20,018|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[raw sql] ()
2023-07-31 23:31:20,019|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,020|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,020|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[generated in 0.00036s] ('stockdb', 'dim_datavendor')
2023-07-31 23:31:20,029|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,029|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.008302s ago] ('stockdb', 'countrycompanylink')
2023-07-31 23:31:20,030|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,031|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.009825s ago] ('stockdb', 'dim_countries')
2023-07-31 23:31:20,032|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,033|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.01197s ago] ('stockdb', 'dim_companies')
2023-07-31 23:31:20,034|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,035|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.01456s ago] ('stockdb', 'fact_historical_price')
2023-07-31 23:31:20,037|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,038|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.01682s ago] ('stockdb', 'fact_news')
2023-07-31 23:31:20,039|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,040|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.01907s ago] ('stockdb', 'dim_macro_parameters')
2023-07-31 23:31:20,041|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,042|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.02135s ago] ('stockdb', 'fact_economic_calendar')
2023-07-31 23:31:20,044|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,044|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.02376s ago] ('stockdb', 'fact_macro_indicators')
2023-07-31 23:31:20,046|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,047|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.02623s ago] ('stockdb', 'test')
2023-07-31 23:31:20,048|INFO|sqlalchemy.engine.Engine|_execute_context|1853|SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %s AND table_name = %s
2023-07-31 23:31:20,050|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.02906s ago] ('stockdb', 'fundamentals')
2023-07-31 23:31:20,051|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,053|INFO|__main__|wrapper|20|Function 'create_db_and_tables' finished.
2023-07-31 23:31:20,054|INFO|openbb_terminal.economy.econdb_model|get_macro_countries|0|START
2023-07-31 23:31:20,054|INFO|openbb_terminal.economy.econdb_model|get_macro_countries|0|{"INPUT": {"chart": "False"}, "VIRTUAL_PATH": "economy.macro_countries", "CHART": false}
2023-07-31 23:31:20,055|INFO|openbb_terminal.economy.econdb_model|get_macro_countries|0|START
2023-07-31 23:31:20,055|INFO|openbb_terminal.economy.econdb_model|get_macro_countries|0|END
2023-07-31 23:31:20,055|INFO|openbb_terminal.economy.econdb_model|get_macro_countries|0|END
2023-07-31 23:31:20,058|INFO|openbb_terminal.economy.nasdaq_model|get_country_codes|0|START
2023-07-31 23:31:20,059|INFO|openbb_terminal.economy.nasdaq_model|get_country_codes|0|{"INPUT": {"chart": "False"}, "VIRTUAL_PATH": "economy.country_codes", "CHART": false}
2023-07-31 23:31:20,059|INFO|openbb_terminal.economy.nasdaq_model|get_country_codes|0|START
2023-07-31 23:31:20,065|INFO|openbb_terminal.economy.nasdaq_model|get_country_codes|0|END
2023-07-31 23:31:20,066|INFO|openbb_terminal.economy.nasdaq_model|get_country_codes|0|END
2023-07-31 23:31:20,085|INFO|__main__|wrapper|17|Function 'insert_db' started.
2023-07-31 23:31:20,110|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,113|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,114|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[generated in 0.00142s] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'Vietnam', 'VNM', 'VND')
2023-07-31 23:31:20,117|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,120|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,122|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,123|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.01112s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'Argentina', 'ARG', 'ARS')
2023-07-31 23:31:20,126|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,134|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,136|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,137|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.02489s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'Australia', 'AUS', 'AUD')
2023-07-31 23:31:20,140|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,161|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,163|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,164|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.05116s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'Brazil', 'BRA', 'BRL')
2023-07-31 23:31:20,165|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,168|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,169|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,170|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.05736s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'Britain', 'GBR', None)
2023-07-31 23:31:20,172|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,181|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,182|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,183|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.07103s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'Canada', 'CAN', 'CAD')
2023-07-31 23:31:20,185|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,191|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,195|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,196|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.08357s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'Chile', 'CHL', 'CLP')
2023-07-31 23:31:20,198|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,202|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,203|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,205|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.09284s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'China', 'CHN', 'CNY')
2023-07-31 23:31:20,208|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,213|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,216|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,217|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1046s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 103915), 'Colombia', 'COL', 'COP')
2023-07-31 23:31:20,219|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,225|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,226|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,227|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1147s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 105216), 'Costa Rica', 'CRI', None)
2023-07-31 23:31:20,232|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,236|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,237|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,238|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1262s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 105216), 'Czech Republic', 'CZE', None)
2023-07-31 23:31:20,240|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,244|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,245|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,246|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1337s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 105216), 'Denmark', 'DNK', 'DKK')
2023-07-31 23:31:20,249|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,253|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,253|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,255|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1424s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 105216), 'Egypt', 'EGY', 'EGP')
2023-07-31 23:31:20,256|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,261|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,263|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,264|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1516s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 105216), 'Euro area', 'EUR', None)
2023-07-31 23:31:20,266|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,271|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,272|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,273|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1604s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 105216), 'Hong Kong', 'HKG', 'HKD')
2023-07-31 23:31:20,275|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,281|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,281|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,284|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1716s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 105216), 'Hungary', 'HUN', 'HUF')
2023-07-31 23:31:20,286|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT
2023-07-31 23:31:20,290|INFO|sqlalchemy.engine.Engine|_begin_impl|1027|BEGIN (implicit)
2023-07-31 23:31:20,292|INFO|sqlalchemy.engine.Engine|_execute_context|1853|INSERT INTO dim_countries (created_at, updated_at, country, code, currency) VALUES (%s, %s, %s, %s, %s)
2023-07-31 23:31:20,294|INFO|sqlalchemy.engine.Engine|_execute_context|1858|[cached since 0.1814s ago] (datetime.datetime(2023, 7, 31, 15, 31, 19, 694044), datetime.datetime(2023, 7, 31, 15, 31, 20, 105216), 'India', 'IND', 'INR')
2023-07-31 23:31:20,297|INFO|sqlalchemy.engine.Engine|_commit_impl|1087|COMMIT